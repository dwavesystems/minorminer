[build-system]
requires = [
    "setuptools>=46.4.0",
    "wheel",
    "Cython>=3.0.6",
]
build-backend = "setuptools.build_meta"

[project]
name = "minorminer"
dynamic = ["version"]
authors = [
    {name = "Kelly Boothby"},
]
maintainers = [
    {name = "D-Wave Inc.", email = "tools@dwavesys.com"},
]
license-files = ["LICENSE", "external/glasgow-subgraph-solver/LICENCE", "minorminer/_extern/rpack/LICENSE.md"]
classifiers = [
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">= 3.10"
dependencies = [
    "dwave-networkx>=0.8.13",
    "fasteners>=0.15",
    "homebase>=1.0.1",
    "networkx>=2.4",
    "numpy>=1.21.6",
    "scipy>=1.7.3",
]

description = "Heuristic algorithm to find graph minor embeddings."

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/dwavesystems/minorminer"
Download = "https://github.com/dwavesystems/minorminer/releases"

[tool.cibuildwheel]
build-verbosity = "1"
skip = "pp* *musllinux*"
before-test = "pip install -r {project}/tests/requirements.txt"
test-command = "pytest {project}/tests"

[tool.cibuildwheel.linux]
archs = "x86_64 aarch64"
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"

[tool.cibuildwheel.macos]
# We follow NumPy and don't build universal wheels, see https://github.com/numpy/numpy/pull/20787
archs = "x86_64 arm64"
environment = { MACOSX_DEPLOYMENT_TARGET=10.13 }

[tool.cibuildwheel.windows]
archs = "AMD64"
# before-build = "pip install delvewheel"
# repair-wheel-command = "delvewheel repair {wheel}"

[tool.setuptools.dynamic]
version = {attr = "minorminer.__version__"}
