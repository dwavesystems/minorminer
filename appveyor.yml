# clone directory
clone_folder: C:\projects\minorminer

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    TRUE_MM_BUILD_DIR: "%APPVEYOR_BUILD_FOLDER%\\minorminer\\dist"
    DEBUG_MM_BUILD_DIR: "%APPVEYOR_BUILD_FOLDER%\\minorminer\\debug_dist"

  # PyPI login
  TWINE_USERNAME: dwtools
  TWINE_PASSWORD:
    secure: 9/YAQhmz9Kb1ZeXzhBYeQA==

  matrix:
    - PYTHON: "C:\\Python35"
      CPPDEBUG: 1

    - PYTHON: "C:\\Python35-x64"
      CPPDEBUG: 1

    - PYTHON: "C:\\Python36"
      CPPDEBUG: 1

    - PYTHON: "C:\\Python36-x64"
      CPPDEBUG: 1

    - PYTHON: "C:\\Python37"
      CPPDEBUG: 1

    - PYTHON: "C:\\Python37-x64"
      CPPDEBUG: 1

    - PYTHON: "C:\\Python38"
      CPPDEBUG: 1

    - PYTHON: "C:\\Python38-x64"
      CPPDEBUG: 1

    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python36-x64"
    - PYTHON: "C:\\Python37"
    - PYTHON: "C:\\Python37-x64"
    - PYTHON: "C:\\Python38"
    - PYTHON: "C:\\Python38-x64"

install:

  # required to link py35 (x86 and x64)
  - set PATH=%PATH%;C:\Program Files (x86)\Windows Kits\8.1\bin\x86

  # Check that we have the expected version and architecture for Python
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\python.exe -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Install dependencies
  - if "%CPPDEBUG%" == "1" ( SET MM_BUILD_DIR=%DEBUG_MM_BUILD_DIR% ) else ( SET MM_BUILD_DIR=%TRUE_MM_BUILD_DIR%)
  - "%PYTHON%\\python.exe -m pip install -r requirements.txt -r tests\\requirements.txt"
  - "%PYTHON%\\python.exe -m pip install cython==0.28.4"
  - "%PYTHON%\\python.exe -m pip install -U wheel setuptools twine"
 
build_script:
  # Build the compiled extension
  - "%PYTHON%\\python.exe setup.py build_ext --inplace"

test_script:
  # Run the project tests
  - "%PYTHON%\\python.exe -m nose . --exe"

after_test:
  # If tests are successful, create binary packages for the project.
  - "%PYTHON%\\python.exe setup.py bdist_wheel -d %MM_BUILD_DIR%"
  - "dir %MM_BUILD_DIR%"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: "minorminer\\dist"

deploy_script:
  - cmd: "if [%APPVEYOR_REPO_TAG%]==[true] if NOT [%CPPDEBUG%]==[1] %PYTHON%\\Scripts\\twine upload --skip-existing %MM_BUILD_DIR%\\*.whl"
